---
title: "Systems"
author: "Marie JULLIEN"
format: html
editor: visual
---

## Question 2
Link to my github repository: https://github.com/mariejullien/Systems.git

## Question 3
```{r}
#| message: false
library(here)
library(vroom)
library(dplyr)
library(tidyr)
library(ggplot2)
```

```{r}
here::i_am("JULLIEN.qmd")
```


```{r}
imaginarystars <- vroom(here("Data","List+sytems.csv"),
                        locale = locale(decimal_mark = ","))
```
The number of star system is `r nrow(imaginarystars)`.
The number of row correspond to the number of star systems. 
The number of star system is `r ncol(imaginarystars)`.
We have 8 columns which is the number of variables. 

```{r}
str(imaginarystars)
```

We notice that the variables relative mass, radius and luminosity are of type characte, however they should be numerical so we modify the variables. 

```{r}
imaginarystars <- imaginarystars %>%
  mutate(`RELATIVE MASS` = ifelse(is.na(`RELATIVE MASS`), NA, as.numeric(`RELATIVE MASS`)),
         radius = ifelse(is.na(radius), NA, as.numeric(radius)),
         Luminosity = ifelse(is.na(Luminosity), NA, as.numeric(Luminosity)))

```

## Question 4
```{r}
nb_obs_with_missing <- imaginarystars %>%
  summarise(Nb_obs_with_missing = sum(rowSums(is.na(.)) > 0))

datades <- data.frame(
  Nb_column = nrow(imaginarystars),
  Nb_variables = ncol(imaginarystars),
  Nb_missingvaluesStar_idx=sum(is.na(imaginarystars$Star_idx)),
  Nb_missingvaluesStarName=sum(is.na(imaginarystars$STAR_NAME)),
  Nb_missingvaluesdistance=sum(is.na(imaginarystars$DISTANCE)),
  Nb_missingvaluesEqtemp=sum(is.na(imaginarystars$`equivalent temperature`)),
  Nb_missingvaluesrelativemass=sum(is.na(imaginarystars$`RELATIVE MASS`)),
  Nb_missingvaluesradiusx=sum(is.na(imaginarystars$radius)),
  Nb_missingvaluesluminosity=sum(is.na(imaginarystars$Luminosity)),
  Nb_missingvaluesstartype=sum(is.na(imaginarystars$`star type`)),
  Nb_obs_with_missing = as.vector(t(nb_obs_with_missing))
)


knitr::kable(datades)

```
```{r}
datades_long <- datades |>
  pivot_longer(cols = everything(), names_to = "Variable", values_to = "Value")
knitr::kable(datades_long)
```
For the data to be more readable I pivot in long format. 


## Question 5
```{r}
ggplot(na.omit(imaginarystars), aes(x =`RELATIVE MASS`, y = radius, is.na())) +
  geom_point(size=0.1, alpha=0.8) +  
  labs(x = "Star Mass", y = "Star Radius", title = "Star Radius as a function of Mass") +
  theme_minimal()
```

We exclude the missing values from the graph to get rid of the warning message. 

## Question 6


```{r}
star_max_mass <- imaginarystars[which.max(imaginarystars$`RELATIVE MASS`), ]

star_min_mass <- imaginarystars[which.min(imaginarystars$`RELATIVE MASS`), ]

star_max_distance <- imaginarystars[which.max(imaginarystars$DISTANCE), ]

star_min_distance <- imaginarystars[which.min(imaginarystars$DISTANCE), ]

star_max_temp <- imaginarystars[which.max(imaginarystars$`equivalent temperature`), ]

star_min_temp <- imaginarystars[which.min(imaginarystars$`equivalent temperature`), ]

star_max_radius <- imaginarystars[which.max(imaginarystars$radius), ]

star_min_radius<- imaginarystars[which.min(imaginarystars$radius), ]

star_max_luminosity <- imaginarystars[which.max(imaginarystars$Luminosity), ]

star_min_luminosity <- imaginarystars[which.min(imaginarystars$Luminosity), ]

```


```{r}
df_extreme_stars <- data.frame(
  Extreme_star = c("Stars with max mass", "Star with min mass", "Stars with max distance", "Stars with min distance", "Star max temp","Star min temp","Stars max radius", "Stars min radius", "Star max luminosity", "Stars min luminosity"),
  Star_name = c(star_max_mass$STAR_NAME, star_min_mass$STAR_NAME,star_max_distance$STAR_NAME, star_min_distance$STAR_NAME, star_max_temp$STAR_NAME, star_min_temp$STAR_NAME, star_max_radius$STAR_NAME, star_min_radius$STAR_NAME, star_max_luminosity$STAR_NAME, star_min_luminosity$STAR_NAME )
)

knitr::kable(df_extreme_stars)


```

## Question 8
```{r}
faction <- vroom(here("Data","bt%factions.csv"))
```
```{r}
controlfaction <- vroom(here("Data","System%control.csv"))
```
## Question 9
I merge the two data set to do the calculations 
```{r}
merge_faction <- merge(faction, controlfaction, by="faction_id")

```

## Question 10
```{r}
missing_systems <- anti_join(imaginarystars, controlfaction, by = "Star_idx")

num_missing_systems <- nrow(missing_systems)

print(num_missing_systems)

```
The number of star systems not in the control faction is `r num_missing_systems`.


## Question 11
```{r}
q11 <- merge_faction |>
  distinct(`faction name`,Star_idx) |>
  group_by(`faction name`) |>
  summarise(sumstars=n())
ggplot(q11, aes(x =`faction name`, y = sumstars, is.na())) +
  geom_col(position = position_dodge(width = 0.7), fill = "lightgreen") +  
  labs(x = "faction_id", y = "Nb of stars", title = "Nb star system for each faction") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

## Question 12



